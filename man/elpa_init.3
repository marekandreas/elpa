.TH "elpa_init" 3 "Thu Nov 28 2024" "ELPA" \" -*- nroff -*-
.ad l
.nh
.ss 12 0
.SH NAME
elpa_init \- initializes the ELPA library
.br

.SH SYNOPSIS
.br
.SS FORTRAN INTERFACE
use elpa
.br

error =\fB elpa_init\fP (api_version)
.sp
With the definitions of the input and output variables:
.TP
integer, intent(in) ::\fB api_version\fP  
The api version that you want to initialize, currently the version is 20171201
.TP
integer             ::\fB error\fP        
The return code. If the function returns without an error, the error code will be ELPA_OK.
.br

.br
.SS C/C++ INTERFACE
#include <elpa/elpa.h>
.br

\fBint\fP error =\fB elpa_init\fP (\fBint\fP api_version);
.sp
With the definitions of the input and output variables:

.TP
int \fB api_version\fP;  
The api version that you want to initialize currently the version is 20171201
.TP
int \fB error\fP;        
The return code. If the function returns without an error, the error code will be ELPA_OK.

.SH DESCRIPTION
Initializes the ELPA library for usage. The return code should be ELPA_OK.
The return code can be queried with the\fB elpa_strerr\fP(3) function.

.SH SEE ALSO
\fBelpa2_print_kernels\fP(1)\fB elpa_allocate\fP(3)\fP elpa_set\fP(3)\fP elpa_setup\fP(3)\fB elpa_strerr\fP(3)\fB elpa_eigenvalues\fP(3)\fB elpa_eigenvectors\fP(3)\fB elpa_choleksy\fP(3)\fB elpa_invert_triangular\fP(3)\fB elpa_solve_tridiagonal\fP(3)\fB elpa_hermitian_multiply\fP(3) \fPelpa_uninit\fP(3)\fB elpa_deallocate\fP(3)
