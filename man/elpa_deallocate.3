.TH "elpa_deallocate" 3 "Thu Nov 28 2024" "ELPA" \" -*- nroff -*-
.ad l
.nh
.ss 12 0
.SH NAME
elpa_deallocate \- deallocates an instance of the ELPA library after usage
.br

.SH SYNOPSIS
.br
.SS FORTRAN INTERFACE
use elpa
.br
class(elpa_t), pointer :: elpa_handle
.br

call\fB elpa_deallocate\fP (elpa_handle, error)
.sp
With the definitions of the input and output variables:

.TP
class(elpa_t)     ::\fB elpa_handle \fP  
The pointer to the instance of the ELPA library that is to be deallocated
.TP
integer, optional ::\fB error \fP 
The returned error code
.br

.SS C/C++ INTERFACE
#include <elpa/elpa.h>
.br
elpa_t elpa_handle;

.br
\fBvoid\fP\fB elpa_deallocate\fP(\fBelpa_t\fP elpa_handle,\fB int\fP *error);
.sp
With the definitions of the input and output variables:

.TP
elpa_t \fB elpa_handle\fP; 
The handle to the ELPA instance which should be deallocated.
.TP
int \fB *error\fP;    
The returned error code
.br

.SH DESCRIPTION
Deallocate an ELPA object. The functions\fB elpa_init\fP(3) and\fB elpa_allocate\fP(3) must have been called\fI BEFORE\fP\fB elpa_deallocate\fP can be called.

.SH SEE ALSO
\fBelpa2_print_kernels\fP(1)\fB elpa_init\fP(3)\fB elpa_allocate\fP(3)\fB elpa_set\fP(3)\fB elpa_setup\fP(3)\fB elpa_strerr\fP(3)\fB elpa_eigenvalues\fP(3)\fB elpa_eigenvectors\fP(3)\fB elpa_cholesky\fP(3)\fB elpa_invert_triangular\fP(3)\fB elpa_solve_tridiagonal\fP(3)\fB elpa_hermitian_multiply\fP(3)\fB elpa_uninit\fP(3)
