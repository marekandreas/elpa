.TH "elpa_autotune_setup" 3 "Thu Nov 28 2024" "ELPA" \" -*- nroff -*-
.ad l
.nh
.ss 12 0
.SH NAME
elpa_autotune_setup \- creates an instance for autotuning of the ELPA library
.br

Before the autotuning object can be created, an instance of the ELPA library has to be setup, see e.g.\fB elpa_setup\fP(3)
.SH SYNOPSIS
.br
.SS FORTRAN INTERFACE
use elpa
.br
class(elpa_t), pointer :: elpa_handle
.br
class(elpa_autotune_t), pointer :: autotune_handle
.br

autotune_handle= elpa_handle%\fBautotune_setup\fP (level, domain)
.sp
With the definitions of the input and output variables:
.TP
integer ::\fB level\fP   
The level of the autotuning, at the moment ELPA_AUTOTUNE_FAST is supported
.TP
integer ::\fB domain\fP  
The domain (real or complex) of the autotuning, can be either ELPA_AUTOTUNE_DOMAIN_REAL or ELPA_AUTOTUNE_DOMAIN_COMPLEX
.br

.SS C/C++ INTERFACE
#include <elpa/elpa.h>
.br
elpa_t elpa_handle;
.br
elpa_autotune_t autotune_handle;

.br
\fBelpa_autotune_t\fP autotune_handle =\fB elpa_autotune_setup\fP (\fBelpa_t\fP elpa_handle, int level, int domain);
.sp
With the definitions of the input and output variables:
.TP
elpa_t \fB elpa_handle\fP;  
The handle of an ELPA object, obtained before with\fB elpa_allocate\fP(3)
.TP
int \fB level\fP;      
The level of the autotuning, at the moment "ELPA_AUTOTUNE_FAST" is supported
.TP
int \fB domain\fP;     
The domain (real or complex) of the autotuning, can be either "ELPA_AUTOTUNE_DOMAIN_REAL"  and "ELPA_AUTOTUNE_DOMAIN_COMPLEX
.TP
elpa_autotune_t\fB autotune_handle\fP;    
The created handle of the autotune object

.SH DESCRIPTION
Creates an ELPA autotuning object.\fI Prior\fP to calling  the autotune_setup, an ELPA object must have been created.
See\fB elpa_setup\fP(3)

.SH SEE ALSO
\fBelpa_autotune_step\fP(3)\fB elpa_autotune_set_best\fP(3)\fB elpa_autotune_deallocate\fp(3)

