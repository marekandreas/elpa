.TH "elpa_setup" 3 "Wed Mar 13 2024" "ELPA" \" -*- nroff -*-
.ad l
.nh
.SH NAME
elpa_setup \- setup an instance of the ELPA library
.br

.SH SYNOPSIS
.br
.SS FORTRAN INTERFACE
use elpa
.br
class(elpa_t), pointer :: elpa
.br

status = elpa%\fBsetup\fP()
.sp
With the definitions of the input and output variables:

.TP
class(elpa_t) :: \fB elpa\fP
An instance of the ELPA object.
.TP
integer :: \fB status\fP  
The returned error code. Should normally be ELPA_OK. Can be queried with\fB elpa_strerr\fP(3)
.br

.br
.SS C INTERFACE
#include <elpa/elpa.h>
.br
elpa_t handle;

.br
\fBint\fP status =\fB elpa_setup\fP (\fBelpa_t\fP handle);
.sp
With the definitions of the input and output variables:

.TP
elpa_t \fB handle\fP;  
The handle of an ELPA object, obtained before with\fB elpa_allocate\fP(3)
.TP
int \fB status\fP;    
The returned error code. Should normally be ELPA_OK. Can be queried with\fB elpa_strerr\fP(3)

.SH DESCRIPTION
Finalizes setting of the mandatory parameters and setups an ELPA object.\fI Prior\fP to calling  the setup, the functions\fB elpa_init\fP(3),\fB elpa_allocate\fP(3)\fI must have been called\fP and the mandatory parameters must have been set with\fB elpa_set\fP(3).

.SH SEE ALSO
\fBelpa2_print_kernels\fP(1)\fB elpa_init\fP(3)\fB elpa_allocate\fP(3)\fB elpa_set\fP(3)\fB elpa_strerr\fP(3)\fB elpa_eigenvalues\fP(3)\fB elpa_eigenvectors\fP(3)\fB elpa_cholesky\fP(3)\fB elpa_invert_triangular\fP(3)\fB elpa_solve_tridiagonal\fP(3)\fB elpa_hermitian_multiply\fP(3)\fB elpa_deallocate\fP(3)\fB elpa_uninit\fP(3)
